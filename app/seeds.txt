studio.mandysa.music.ui.all.playlist.PlaylistViewModel$nextPage$1$onChanged$1$1
studio.mandysa.music.MyApplication
studio.mandysa.statelayout.StateLayout
studio.mandysa.music.logic.model.UserModel
studio.mandysa.music.logic.model.NewSongModel
androidx.core.widget.NestedScrollView
androidx.lifecycle.CompositeGeneratedAdaptersObserver
studio.mandysa.music.databinding.LayoutRecyclerBinding
studio.mandysa.music.logic.utils.FragmentActivityViewModelDelegate
studio.mandysa.music.ui.home.HomeFragment$onViewCreated$1$2$1$1$2
com.sothree.slidinguppanel.SlidingUpPanelLayout
studio.mandysa.music.logic.utils.TextViewUtilsKt
studio.mandysa.music.logic.model.NeteaseCloudMusicApi
androidx.cardview.widget.CardView
studio.mandysa.music.logic.model.LoginModel
studio.mandysa.music.logic.model.SearchMusicModel
studio.mandysa.music.logic.network.ServiceCreator
studio.mandysa.bottomnavigationbar.BottomNavigationBar
studio.mandysa.music.logic.utils.ArrayListUtilsKt
androidx.recyclerview.widget.RecyclerView
androidx.recyclerview.widget.StaggeredGridLayoutManager
androidx.annotation.Keep
studio.mandysa.music.ui.play.PlayFragment
studio.mandysa.music.ui.search.searchlist.SearchListFragment
studio.mandysa.music.logic.utils.FragmentBindingDelegate
studio.mandysa.music.logic.model.ToplistModel
okhttp3.internal.publicsuffix.PublicSuffixDatabase
studio.mandysa.music.ui.me.MeFragment$onViewCreated$1$2$1$onResponse$1
studio.mandysa.music.databinding.ItemMyPlaylistBinding
com.yanzhenjie.sofia.StatusView
androidx.recyclerview.widget.LinearLayoutManager
studio.mandysa.music.logic.utils.FragmentActivityUtilsKt$inflate$1
androidx.lifecycle.FullLifecycleObserverAdapter
studio.mandysa.music.logic.model.MusicModel
mandysax.fragmentpage.widget.FragmentPage
studio.mandysa.music.logic.model.UserPlaylistModel$UserPlaylist
studio.mandysa.music.databinding.ItemPlaylistBinding
studio.mandysa.music.databinding.ActivityMainBinding
studio.mandysa.music.service.MediaPlayService
studio.mandysa.music.ui.view.SquareLayout
studio.mandysa.music.logic.utils.ClassUtilsKt
studio.mandysa.music.logic.utils.ViewModelUtilsKt
studio.mandysa.music.databinding.LayoutLoadingBinding
androidx.core.app.CoreComponentFactory
androidx.core.app.RemoteActionCompatParcelizer
studio.mandysa.music.logic.model.SingerModel
androidx.versionedparcelable.ParcelImpl
mandysax.fragment.FragmentView
androidx.core.graphics.drawable.IconCompatParcelizer
studio.mandysa.music.ui.me.MeFragment$onViewCreated$1$2$1
mandysax.navigation.NavHostFragmentView
com.yanzhenjie.sofia.HostLayout
studio.mandysa.music.databinding.ItemPlaylistInfoHeadBinding
androidx.viewbinding.ViewBinding
androidx.lifecycle.ReflectiveGenericLifecycleObserver
studio.mandysa.music.databinding.FragmentHomeBinding
studio.mandysa.music.logic.model.UserPlaylistModel
studio.mandysa.music.logic.utils.EditTextUtilsKt
studio.mandysa.music.logic.utils.FragmentUtilsKt
studio.mandysa.music.logic.model.PlaylistInfoHeadModel
studio.mandysa.music.databinding.FragmentStartBinding
studio.mandysa.music.databinding.ItemToplistBinding
studio.mandysa.music.ui.event.UserViewModel$login$1
studio.mandysa.music.logic.model.LyricModel
studio.mandysa.music.databinding.LayoutErrorBinding
studio.mandysa.music.logic.utils.ObservableUtilsKt
studio.mandysa.music.ui.search.SearchFragment$onViewCreated$3$1$1$1
studio.mandysa.music.ui.search.searchlist.SearchListFragment$nextPage$1
studio.mandysa.music.logic.model.PlaylistInfoModel
studio.mandysa.music.databinding.FragmentSearchBinding
androidx.recyclerview.widget.GridLayoutManager
androidx.lifecycle.Lifecycling$1
studio.mandysa.music.ui.controller.ControllerFragment
studio.mandysa.music.logic.utils.DefaultPlayManagerUtilsKt
studio.mandysa.music.logic.utils.FragmentActivityUtilsKt
studio.mandysa.music.databinding.LayoutEmptyBinding
studio.mandysa.music.databinding.FragmentControllerBinding
com.yanzhenjie.sofia.NavigationView
android.support.v4.graphics.drawable.IconCompatParcelizer
androidx.lifecycle.SingleGeneratedAdapterObserver
studio.mandysa.music.databinding.ItemMePlaylistBinding
studio.mandysa.music.logic.model.PlaylistModel
androidx.core.widget.ContentLoadingProgressBar
studio.mandysa.music.databinding.ItemPlaylistHeadBinding
studio.mandysa.music.logic.utils.ViewModelUtilsKt$viewModels$1
studio.mandysa.music.logic.model.PlaylistInfoModel$SongList
studio.mandysa.music.ui.all.playlist.PlaylistViewModel$initData$1
studio.mandysa.music.databinding.ItemUserBinding
studio.mandysa.music.databinding.ItemSongBinding
studio.mandysa.music.logic.utils.ViewModelUtilsKt$viewModels$2
studio.mandysa.music.ui.search.searchlist.SearchListFragment$nextPage$1$onResponse$1
studio.mandysa.music.MainActivity
studio.mandysa.music.ui.home.HomeFragment$onViewCreated$1$2$1$1$1
studio.mandysa.music.logic.model.PlaylistModel$Playlist
studio.mandysa.music.databinding.FragmentPlayBinding
android.support.v4.app.RemoteActionCompatParcelizer
kotlin.internal.jdk8.JDK8PlatformImplementations
kotlin.internal.jdk7.JDK7PlatformImplementations
studio.mandysa.music.logic.utils.ObservableUtilsKt$set$1
androidx.core.graphics.drawable.IconCompat
studio.mandysa.music.databinding.FragmentMeBinding
androidx.core.app.RemoteActionCompat
studio.mandysa.music.logic.network.Url
studio.mandysa.music.databinding.FragmentPlaylistBinding
androidx.versionedparcelable.CustomVersionedParcelable
studio.mandysa.music.databinding.FragmentSearchListBinding
studio.mandysa.music.logic.model.UserModel: java.lang.String avatarUrl
studio.mandysa.music.ui.home.HomeFragment$onViewCreated$1$2$1$1$1: studio.mandysa.music.ui.home.HomeFragment this$0
studio.mandysa.music.databinding.ActivityMainBinding: studio.mandysa.bottomnavigationbar.BottomNavigationBar bottomNavigationBar
studio.mandysa.music.databinding.ItemPlaylistBinding: android.widget.TextView playlistTitle
studio.mandysa.music.ui.me.MeFragment$onViewCreated$1$2$1: studio.mandysa.music.databinding.FragmentMeBinding $this_apply
studio.mandysa.music.databinding.ItemPlaylistInfoHeadBinding: android.widget.ImageView cover
studio.mandysa.music.databinding.ItemSongBinding: android.widget.ImageView songCover
studio.mandysa.music.ui.search.searchlist.SearchListFragment$nextPage$1: studio.mandysa.music.ui.search.searchlist.SearchListFragment this$0
studio.mandysa.music.logic.model.NewSongModel: java.lang.String picUrl
studio.mandysa.music.ui.search.SearchFragment$onViewCreated$3$1$1$1: studio.mandysa.statelayout.StateLayout $this_apply
studio.mandysa.music.logic.model.SearchMusicModel: java.lang.String name
studio.mandysa.music.logic.model.UserPlaylistModel$UserPlaylist: java.lang.String name
studio.mandysa.music.databinding.FragmentPlayBinding: android.widget.ImageView playSkipPrevious
studio.mandysa.music.databinding.FragmentPlayBinding: android.widget.ImageView playCover
studio.mandysa.music.ui.all.playlist.PlaylistViewModel$initData$1: studio.mandysa.music.ui.all.playlist.PlaylistViewModel this$0
studio.mandysa.music.logic.model.PlaylistInfoHeadModel: java.lang.String description
studio.mandysa.music.logic.utils.ViewModelUtilsKt$viewModels$2: mandysax.fragment.Fragment $this_viewModels
studio.mandysa.music.databinding.FragmentPlaylistBinding: androidx.recyclerview.widget.RecyclerView recycler
studio.mandysa.music.databinding.FragmentControllerBinding: android.widget.ImageView controllerCover
studio.mandysa.music.databinding.LayoutErrorBinding: android.widget.LinearLayout clErrorCheck
mandysax.media.model.DefaultMusic: java.lang.String mTitle
studio.mandysa.music.databinding.ItemSongBinding: androidx.cardview.widget.CardView rootView
studio.mandysa.music.databinding.ItemToplistBinding: android.widget.LinearLayout rootView
studio.mandysa.music.logic.model.PlaylistInfoModel: java.util.List songList
studio.mandysa.music.logic.utils.FragmentActivityUtilsKt$inflate$1: mandysax.fragment.FragmentActivity $this_inflate
studio.mandysa.music.databinding.FragmentPlayBinding: android.widget.ImageView playOrPause
studio.mandysa.music.logic.model.PlaylistInfoModel: java.lang.String description
studio.mandysa.music.logic.network.ServiceCreator: mandysax.anna2.Anna2 ANNA
studio.mandysa.music.databinding.FragmentSearchBinding: android.widget.EditText searchEditFrame
studio.mandysa.music.logic.model.UserPlaylistModel: java.util.List list
studio.mandysa.music.logic.utils.FragmentBindingDelegate: java.lang.Class clazz
studio.mandysa.music.databinding.FragmentMeBinding: studio.mandysa.statelayout.StateLayout rootView
studio.mandysa.music.databinding.ItemMyPlaylistBinding: android.widget.ImageView playlistCover
studio.mandysa.music.databinding.FragmentStartBinding: android.widget.EditText etPhone
studio.mandysa.music.databinding.ItemPlaylistBinding: android.widget.ImageView playlistCover
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
studio.mandysa.music.logic.model.MusicModel: java.lang.String id
studio.mandysa.music.databinding.ItemMePlaylistBinding: android.widget.LinearLayout rootView
studio.mandysa.music.databinding.ItemMyPlaylistBinding: androidx.cardview.widget.CardView cardView
studio.mandysa.music.logic.model.UserModel: java.lang.String nickname
studio.mandysa.music.logic.model.ToplistModel: java.lang.String name
studio.mandysa.music.databinding.ItemPlaylistHeadBinding: android.widget.LinearLayout rootView
studio.mandysa.music.logic.model.SearchMusicModel: java.lang.String id
mandysax.media.model.DefaultMusic: java.lang.String mUrl
studio.mandysa.music.databinding.FragmentPlayBinding: android.widget.LinearLayout rootView
studio.mandysa.music.databinding.ItemMyPlaylistBinding: androidx.cardview.widget.CardView rootView
studio.mandysa.music.ui.event.UserViewModel$login$1: studio.mandysa.music.ui.event.UserViewModel this$0
studio.mandysa.music.databinding.FragmentStartBinding: android.widget.Button btnLogin
studio.mandysa.music.databinding.FragmentSearchListBinding: studio.mandysa.statelayout.StateLayout statelayout
studio.mandysa.music.logic.model.ToplistModel: java.lang.String id
studio.mandysa.music.logic.model.UserPlaylistModel$UserPlaylist: java.lang.String coverImgUrl
studio.mandysa.music.databinding.ActivityMainBinding: mandysax.fragmentpage.widget.FragmentPage mainFragmentPage
studio.mandysa.music.logic.model.MusicModel: java.lang.String name
studio.mandysa.music.databinding.FragmentSearchBinding: androidx.recyclerview.widget.RecyclerView recycler
studio.mandysa.music.logic.model.ToplistModel: java.lang.String description
studio.mandysa.music.databinding.ItemMyPlaylistBinding: android.widget.TextView playlistName
studio.mandysa.music.logic.model.UserPlaylistModel$UserPlaylist: java.lang.String id
studio.mandysa.music.logic.model.NewSongModel: java.lang.String name
studio.mandysa.music.logic.model.PlaylistInfoModel$SongList: java.lang.String id
studio.mandysa.music.logic.model.LoginModel: java.lang.String cookie
studio.mandysa.music.ui.home.HomeFragment$onViewCreated$1$2$1$1$2: studio.mandysa.music.ui.home.HomeFragment this$0
studio.mandysa.music.databinding.FragmentSearchListBinding: androidx.recyclerview.widget.RecyclerView recycler
studio.mandysa.music.ui.all.playlist.PlaylistViewModel$nextPage$1$onChanged$1$1: studio.mandysa.music.ui.all.playlist.PlaylistViewModel$nextPage$1 this$1
studio.mandysa.music.databinding.ItemSongBinding: androidx.cardview.widget.CardView cardView
studio.mandysa.music.ui.home.HomeFragment$onViewCreated$1$2$1$1$2: studio.mandysa.music.databinding.FragmentHomeBinding $this_apply
studio.mandysa.music.ui.search.SearchFragment$onViewCreated$3$1$1$1: studio.mandysa.music.ui.search.SearchFragment this$0
studio.mandysa.music.logic.model.PlaylistInfoHeadModel: java.lang.String title
studio.mandysa.music.logic.model.SingerModel: java.lang.String picUrl
studio.mandysa.music.databinding.FragmentHomeBinding: studio.mandysa.statelayout.StateLayout rootView
studio.mandysa.music.databinding.FragmentPlayBinding: android.widget.TextView playSingerName
studio.mandysa.music.ui.home.HomeFragment$onViewCreated$1$2$1$1$1: studio.mandysa.music.databinding.FragmentHomeBinding $this_apply
studio.mandysa.music.logic.model.PlaylistModel$Playlist: java.lang.String picUrl
studio.mandysa.music.logic.utils.FragmentBindingDelegate: androidx.viewbinding.ViewBinding mBinding
studio.mandysa.music.databinding.FragmentHomeBinding: studio.mandysa.statelayout.StateLayout statelayout
studio.mandysa.music.databinding.LayoutErrorBinding: android.widget.LinearLayout rootView
studio.mandysa.music.databinding.ItemSongBinding: android.widget.TextView songSingerName
mandysax.media.model.DefaultMusic: java.util.ArrayList mArtistList
studio.mandysa.music.databinding.ItemUserBinding: androidx.cardview.widget.CardView rootView
studio.mandysa.music.databinding.FragmentSearchBinding: android.widget.LinearLayout rootView
studio.mandysa.music.databinding.FragmentSearchListBinding: studio.mandysa.statelayout.StateLayout rootView
studio.mandysa.music.databinding.ItemUserBinding: android.widget.ImageView ivAvatar
studio.mandysa.music.databinding.ItemMyPlaylistBinding: android.widget.TextView authorName
studio.mandysa.music.databinding.ItemMePlaylistBinding: androidx.recyclerview.widget.RecyclerView playlistList
kotlin.jvm.internal.Lambda: int arity
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR
studio.mandysa.music.databinding.ItemPlaylistBinding: android.widget.LinearLayout rootView
studio.mandysa.music.databinding.FragmentSearchBinding: com.sothree.slidinguppanel.SlidingUpPanelLayout searchSlidingView
studio.mandysa.music.databinding.ItemPlaylistInfoHeadBinding: android.widget.TextView todo
studio.mandysa.music.logic.utils.FragmentActivityViewModelDelegate: java.lang.Class clazz
studio.mandysa.music.logic.model.ToplistModel: java.lang.String updateFrequency
studio.mandysa.music.logic.model.ToplistModel: java.lang.String coverImgUrl
studio.mandysa.music.logic.model.UserPlaylistModel$UserPlaylist: java.lang.String signature
studio.mandysa.music.databinding.FragmentPlaylistBinding: studio.mandysa.statelayout.StateLayout statelayout
studio.mandysa.music.databinding.FragmentControllerBinding: android.widget.LinearLayout rootView
studio.mandysa.music.databinding.ItemSongBinding: android.widget.TextView songName
studio.mandysa.music.logic.utils.ObservableUtilsKt$set$1: mandysax.anna2.observable.Observable $this_set
studio.mandysa.music.databinding.LayoutEmptyBinding: android.widget.TextView clErrorCheck
studio.mandysa.music.databinding.LayoutLoadingBinding: android.widget.ProgressBar rootView
studio.mandysa.music.databinding.ActivityMainBinding: com.sothree.slidinguppanel.SlidingUpPanelLayout mainSlidingView
studio.mandysa.music.logic.model.PlaylistModel: java.util.List playlist
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: android.os.Parcelable$Creator CREATOR
studio.mandysa.music.databinding.FragmentMeBinding: studio.mandysa.statelayout.StateLayout statelayout
studio.mandysa.music.logic.model.SingerModel: java.lang.String name
studio.mandysa.music.logic.model.SingerModel: java.lang.String id
studio.mandysa.music.logic.model.PlaylistModel$Playlist: java.lang.String name
studio.mandysa.music.logic.model.UserModel: java.lang.String userId
studio.mandysa.music.databinding.ItemPlaylistHeadBinding: androidx.recyclerview.widget.RecyclerView playlistList
mandysax.media.model.DefaultMusic: java.lang.String mCoverUrl
studio.mandysa.music.databinding.FragmentPlaylistBinding: studio.mandysa.statelayout.StateLayout rootView
studio.mandysa.music.logic.model.SearchMusicModel: java.lang.String artistsName
studio.mandysa.music.logic.model.UserModel: java.lang.String signature
studio.mandysa.music.logic.model.NewSongModel: java.lang.String artistsName
studio.mandysa.music.databinding.FragmentPlayBinding: android.widget.ImageView playSkipNext
studio.mandysa.music.databinding.ItemUserBinding: android.widget.TextView tvNickname
studio.mandysa.music.logic.utils.ObservableUtilsKt$set$1: mandysax.lifecycle.Lifecycle $lifecycle
studio.mandysa.music.logic.network.Url: java.lang.String MUSIC_URL
studio.mandysa.music.databinding.ItemToplistBinding: android.widget.TextView toplistName
studio.mandysa.music.databinding.FragmentPlayBinding: android.widget.SeekBar playbackSeekbar
studio.mandysa.music.databinding.ItemPlaylistInfoHeadBinding: android.widget.LinearLayout rootView
studio.mandysa.music.ui.search.searchlist.SearchListFragment$nextPage$1$onResponse$1: studio.mandysa.music.ui.search.searchlist.SearchListFragment this$0
studio.mandysa.music.databinding.FragmentControllerBinding: android.widget.TextView controllerTitle
studio.mandysa.music.databinding.LayoutRecyclerBinding: androidx.recyclerview.widget.RecyclerView rootView
studio.mandysa.music.databinding.FragmentStartBinding: android.widget.LinearLayout rootView
studio.mandysa.music.databinding.ItemToplistBinding: android.widget.ImageView toplistCover
studio.mandysa.music.ui.me.MeFragment$onViewCreated$1$2$1$onResponse$1: studio.mandysa.music.databinding.FragmentMeBinding $this_apply
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
studio.mandysa.music.databinding.FragmentControllerBinding: android.widget.ImageView controllerNextSong
studio.mandysa.music.logic.model.PlaylistInfoModel: java.lang.String coverImgUrl
studio.mandysa.music.databinding.FragmentMeBinding: androidx.recyclerview.widget.RecyclerView recycler
studio.mandysa.music.databinding.FragmentHomeBinding: androidx.recyclerview.widget.RecyclerView recycler
studio.mandysa.music.databinding.FragmentStartBinding: android.widget.EditText etPassword
studio.mandysa.music.databinding.FragmentPlayBinding: android.widget.SeekBar volumeSeekbar
studio.mandysa.music.logic.model.PlaylistModel$Playlist: java.lang.String id
studio.mandysa.music.logic.model.MusicModel: java.lang.String picUrl
studio.mandysa.music.logic.utils.ViewModelUtilsKt$viewModels$1: mandysax.fragment.FragmentActivity $this_viewModels
studio.mandysa.music.logic.model.MusicModel: java.lang.String artistsName
studio.mandysa.music.logic.model.LyricModel: java.lang.String Lyric
studio.mandysa.music.databinding.LayoutEmptyBinding: androidx.core.widget.NestedScrollView rootView
studio.mandysa.music.databinding.FragmentControllerBinding: android.widget.ImageView controllerPlayOrPause
studio.mandysa.music.logic.model.NewSongModel: java.lang.String id
studio.mandysa.music.ui.all.playlist.PlaylistViewModel$nextPage$1$onChanged$1$1: studio.mandysa.music.ui.all.playlist.PlaylistViewModel this$0
studio.mandysa.music.logic.utils.FragmentActivityViewModelDelegate: mandysax.lifecycle.ViewModel mViewModel
studio.mandysa.music.databinding.LayoutRecyclerBinding: androidx.recyclerview.widget.RecyclerView recycler
studio.mandysa.music.databinding.ActivityMainBinding: android.widget.FrameLayout rootView
studio.mandysa.music.databinding.FragmentSearchBinding: studio.mandysa.statelayout.StateLayout statelayout
studio.mandysa.music.databinding.FragmentPlayBinding: android.widget.TextView playSongName
studio.mandysa.music.logic.model.PlaylistInfoModel: java.lang.String name
studio.mandysa.music.databinding.ItemPlaylistInfoHeadBinding: android.widget.TextView title
studio.mandysa.music.ui.me.MeFragment$onViewCreated$1$2$1: studio.mandysa.music.ui.me.MeFragment this$0
androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
studio.mandysa.music.databinding.ActivityMainBinding: android.widget.FrameLayout bottomNavLayout
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
studio.mandysa.music.logic.model.PlaylistInfoHeadModel: java.lang.String url
mandysax.media.model.DefaultMusic: java.lang.String id
studio.mandysa.music.logic.model.UserPlaylistModel$UserPlaylist: java.lang.String nickname
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.core.view.ViewCompat$Api26Impl: boolean isFocusedByDefault(android.view.View)
studio.mandysa.music.logic.model.ToplistModel: ToplistModel()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
studio.mandysa.music.databinding.LayoutErrorBinding: LayoutErrorBinding(android.widget.LinearLayout,android.widget.LinearLayout)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode valueOf(java.lang.String)
studio.mandysa.music.databinding.ItemMyPlaylistBinding: androidx.cardview.widget.CardView getRoot()
studio.mandysa.music.logic.model.UserModel: UserModel()
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.core.view.ViewCompat$Api26Impl: int getNextClusterForwardId(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
studio.mandysa.music.databinding.FragmentControllerBinding: android.widget.LinearLayout getRoot()
androidx.core.view.ViewCompat$Api17Impl: int getPaddingStart(android.view.View)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29()
com.sothree.slidinguppanel.SlidingUpPanelLayout: int getCurrentParallaxOffset()
studio.mandysa.music.databinding.FragmentPlayBinding: android.widget.LinearLayout getRoot()
studio.mandysa.music.ui.all.playlist.PlaylistViewModel$initData$1: void onResponse(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: WindowInsetsCompat$Impl(androidx.core.view.WindowInsetsCompat)
studio.mandysa.music.databinding.ItemToplistBinding: ItemToplistBinding(android.widget.LinearLayout,android.widget.ImageView,android.widget.TextView)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
studio.mandysa.music.logic.model.PlaylistModel$Playlist: void setPicUrl(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: boolean isRound()
studio.mandysa.music.logic.model.NewSongModel: java.lang.String getUrl()
androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy[] values()
studio.mandysa.music.logic.model.ToplistModel: java.lang.String getName()
studio.mandysa.music.logic.model.ToplistModel: void setCoverImgUrl(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
okhttp3.TlsVersion: okhttp3.TlsVersion[] values()
studio.mandysa.music.databinding.ItemPlaylistInfoHeadBinding: ItemPlaylistInfoHeadBinding(android.widget.LinearLayout,android.widget.ImageView,android.widget.TextView,android.widget.TextView)
studio.mandysa.music.logic.model.NeteaseCloudMusicApi: mandysax.anna2.observable.Observable searchMusic(java.lang.String,int)
androidx.core.view.WindowInsetsCompat$Impl: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
studio.mandysa.music.databinding.FragmentPlaylistBinding: FragmentPlaylistBinding(studio.mandysa.statelayout.StateLayout,androidx.recyclerview.widget.RecyclerView,studio.mandysa.statelayout.StateLayout)
studio.mandysa.music.logic.model.ToplistModel: void setName(java.lang.String)
androidx.recyclerview.widget.RecyclerView: int getBaseline()
studio.mandysa.music.logic.model.MusicModel: java.lang.String getId()
androidx.core.view.ViewCompat$Api19Impl: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
studio.mandysa.music.logic.model.PlaylistInfoModel$SongList: java.lang.String getId()
androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)
studio.mandysa.music.ui.view.SquareLayout: SquareLayout(android.content.Context,android.util.AttributeSet)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
studio.mandysa.music.databinding.ActivityMainBinding: studio.mandysa.music.databinding.ActivityMainBinding bind(android.view.View)
studio.mandysa.music.logic.model.PlaylistModel$Playlist: java.lang.String getPicUrl()
androidx.core.view.ViewCompat$Api30Impl: void setStateDescription(android.view.View,java.lang.CharSequence)
androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)
studio.mandysa.music.databinding.FragmentPlayBinding: studio.mandysa.music.databinding.FragmentPlayBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)
studio.mandysa.music.databinding.FragmentPlaylistBinding: studio.mandysa.music.databinding.FragmentPlaylistBinding bind(android.view.View)
androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)
studio.mandysa.music.databinding.LayoutLoadingBinding: android.view.View getRoot()
androidx.cardview.widget.CardView: void setPreventCornerOverlap(boolean)
com.sothree.slidinguppanel.SlidingUpPanelLayout: void setAnchorPoint(float)
studio.mandysa.music.logic.model.MusicModel: MusicModel()
com.nostra13.universalimageloader.core.assist.QueueProcessingType: com.nostra13.universalimageloader.core.assist.QueueProcessingType[] values()
studio.mandysa.music.databinding.FragmentStartBinding: studio.mandysa.music.databinding.FragmentStartBinding inflate(android.view.LayoutInflater)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getRootStableInsets()
studio.mandysa.music.logic.utils.ClassUtilsKt: java.lang.Object create(java.lang.Class)
studio.mandysa.music.databinding.ActivityMainBinding: android.view.View getRoot()
androidx.core.view.ViewCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
studio.mandysa.statelayout.StateLayout: kotlin.jvm.functions.Function1 getLoading()
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
studio.mandysa.music.databinding.ItemMePlaylistBinding: android.view.View getRoot()
studio.mandysa.music.logic.model.PlaylistInfoModel: void setSongList(java.util.List)
studio.mandysa.music.logic.model.ToplistModel: void setId(java.lang.String)
androidx.core.view.ViewCompat$Api16Impl: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
kotlin.jvm.internal.Lambda: int getArity()
androidx.core.view.ViewCompat$Api28Impl: void setScreenReaderFocusable(android.view.View,boolean)
com.sothree.slidinguppanel.SlidingUpPanelLayout: void setDragView(android.view.View)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int,int)
mandysax.core.app.ComponentActivity: ComponentActivity()
com.sothree.slidinguppanel.SlidingUpPanelLayout: float getAnchorPoint()
studio.mandysa.bottomnavigationbar.BottomNavigationBar: java.util.List getModels()
studio.mandysa.music.MyApplication: MyApplication()
studio.mandysa.music.databinding.ItemPlaylistInfoHeadBinding: studio.mandysa.music.databinding.ItemPlaylistInfoHeadBinding bind(android.view.View)
studio.mandysa.music.logic.model.NeteaseCloudMusicApi: mandysax.anna2.observable.Observable getSongListInfo(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: void setZ(android.view.View,float)
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
studio.mandysa.music.logic.utils.ViewModelUtilsKt$viewModels$2: mandysax.lifecycle.ViewModel invoke()
studio.mandysa.music.databinding.FragmentHomeBinding: studio.mandysa.music.databinding.FragmentHomeBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)
studio.mandysa.music.logic.model.PlaylistInfoModel: void setDescription(java.lang.String)
studio.mandysa.music.ui.event.UserViewModel$login$1: UserViewModel$login$1(studio.mandysa.music.ui.event.UserViewModel)
studio.mandysa.music.logic.model.SearchMusicModel: java.lang.String getUrl()
studio.mandysa.music.ui.home.HomeFragment$onViewCreated$1$2$1$1$1: HomeFragment$onViewCreated$1$2$1$1$1(studio.mandysa.music.databinding.FragmentHomeBinding,studio.mandysa.music.ui.home.HomeFragment)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemGestureInsets()
androidx.core.view.ViewCompat$Api21Impl: void setTranslationZ(android.view.View,float)
studio.mandysa.music.logic.utils.EditTextUtilsKt: void hideInput(android.widget.EditText)
studio.mandysa.music.databinding.FragmentSearchBinding: android.view.View getRoot()
studio.mandysa.statelayout.StateLayout: void setLoadingLayout(int)
studio.mandysa.music.logic.utils.FragmentActivityUtilsKt: androidx.viewbinding.ViewBinding inflateBinding(android.view.LayoutInflater)
studio.mandysa.music.databinding.LayoutLoadingBinding: android.widget.ProgressBar getRoot()
studio.mandysa.music.logic.model.PlaylistInfoHeadModel: java.lang.String getUrl()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsets(int)
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
com.yanzhenjie.sofia.HostLayout: com.yanzhenjie.sofia.StatusView getMStatusView()
androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
androidx.core.view.ViewCompat$Api26Impl: boolean restoreDefaultFocus(android.view.View)
studio.mandysa.statelayout.StateLayout: void setEmptyLayout(int)
androidx.cardview.widget.CardView: int getContentPaddingBottom()
studio.mandysa.music.logic.utils.FragmentBindingDelegate: androidx.viewbinding.ViewBinding getValue(mandysax.fragment.Fragment,kotlin.reflect.KProperty)
studio.mandysa.music.databinding.LayoutLoadingBinding: LayoutLoadingBinding(android.widget.ProgressBar)
studio.mandysa.music.databinding.LayoutEmptyBinding: LayoutEmptyBinding(androidx.core.widget.NestedScrollView,android.widget.TextView)
androidx.core.view.WindowInsetsCompat$Impl20: boolean equals(java.lang.Object)
studio.mandysa.music.logic.model.PlaylistInfoModel: void setCoverImgUrl(java.lang.String)
studio.mandysa.music.databinding.FragmentMeBinding: FragmentMeBinding(studio.mandysa.statelayout.StateLayout,androidx.recyclerview.widget.RecyclerView,studio.mandysa.statelayout.StateLayout)
androidx.core.view.ViewCompat$Api16Impl: int getMinimumHeight(android.view.View)
studio.mandysa.music.ui.all.playlist.PlaylistViewModel$nextPage$1$onChanged$1$1: void onFailure(int)
studio.mandysa.music.databinding.ItemPlaylistHeadBinding: studio.mandysa.music.databinding.ItemPlaylistHeadBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)
androidx.core.view.ViewCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.View)
mandysax.fragment.FragmentActivity: void setContentView(android.view.View)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)
androidx.core.view.WindowInsetsCompat$Impl21: void setStableInsets(androidx.core.graphics.Insets)
androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)
studio.mandysa.music.ui.search.searchlist.SearchListFragment$nextPage$1: void onResponse(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getTappableElementInsets()
studio.mandysa.music.logic.utils.ViewModelUtilsKt: kotlin.Lazy viewModels(mandysax.fragment.Fragment)
studio.mandysa.music.databinding.LayoutRecyclerBinding: studio.mandysa.music.databinding.LayoutRecyclerBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)
studio.mandysa.music.databinding.ItemSongBinding: studio.mandysa.music.databinding.ItemSongBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)
studio.mandysa.music.ui.search.searchlist.SearchListFragment$nextPage$1$onResponse$1: void onResponse(java.lang.Object)
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.core.view.ViewCompat$Api17Impl: boolean isPaddingRelative(android.view.View)
mandysax.fragment.FragmentView: FragmentView(android.content.Context,android.util.AttributeSet)
studio.mandysa.music.MainActivity: MainActivity()
studio.mandysa.music.databinding.ItemSongBinding: ItemSongBinding(androidx.cardview.widget.CardView,androidx.cardview.widget.CardView,android.widget.ImageView,android.widget.TextView,android.widget.TextView)
studio.mandysa.music.logic.model.PlaylistInfoModel$SongList: PlaylistInfoModel$SongList()
studio.mandysa.music.databinding.ItemPlaylistInfoHeadBinding: studio.mandysa.music.databinding.ItemPlaylistInfoHeadBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
studio.mandysa.music.logic.utils.ViewModelUtilsKt: studio.mandysa.music.logic.utils.FragmentActivityViewModelDelegate activityViewModels()
studio.mandysa.music.logic.model.MusicModel: java.util.List getArtist()
mandysax.anna2.TYPE: mandysax.anna2.TYPE[] values()
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsets(int)
androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)
androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet)
studio.mandysa.music.ui.event.UserViewModel$login$1: void onFailure(int)
androidx.core.view.ViewCompat$Api26Impl: int getImportantForAutofill(android.view.View)
androidx.core.view.ViewCompat$Api26Impl: boolean isImportantForAutofill(android.view.View)
studio.mandysa.music.databinding.FragmentSearchBinding: studio.mandysa.music.databinding.FragmentSearchBinding bind(android.view.View)
androidx.core.view.ViewCompat$Api29Impl: java.util.List getSystemGestureExclusionRects(android.view.View)
studio.mandysa.music.databinding.FragmentStartBinding: FragmentStartBinding(android.widget.LinearLayout,android.widget.Button,android.widget.EditText,android.widget.EditText)
studio.mandysa.music.databinding.ItemMePlaylistBinding: android.widget.LinearLayout getRoot()
studio.mandysa.music.databinding.ItemMePlaylistBinding: studio.mandysa.music.databinding.ItemMePlaylistBinding bind(android.view.View)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20()
studio.mandysa.music.logic.model.UserPlaylistModel: UserPlaylistModel()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setTappableElementInsets(androidx.core.graphics.Insets)
androidx.core.view.ViewCompat$Api21Impl$1: ViewCompat$Api21Impl$1(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
studio.mandysa.music.databinding.ItemMyPlaylistBinding: ItemMyPlaylistBinding(androidx.cardview.widget.CardView,android.widget.TextView,androidx.cardview.widget.CardView,android.widget.ImageView,android.widget.TextView)
androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)
studio.mandysa.music.databinding.FragmentSearchListBinding: studio.mandysa.music.databinding.FragmentSearchListBinding inflate(android.view.LayoutInflater)
androidx.recyclerview.widget.RecyclerView: long getNanoTime()
com.sothree.slidinguppanel.SlidingUpPanelLayout: void setScrollableViewHelper(com.sothree.slidinguppanel.ScrollableViewHelper)
studio.mandysa.statelayout.StateLayout: int getErrorLayout()
studio.mandysa.music.databinding.FragmentControllerBinding: studio.mandysa.music.databinding.FragmentControllerBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()
androidx.core.view.ViewCompat$Api16Impl: boolean getFitsSystemWindows(android.view.View)
studio.mandysa.music.databinding.ItemSongBinding: studio.mandysa.music.databinding.ItemSongBinding bind(android.view.View)
studio.mandysa.music.logic.model.NeteaseCloudMusicApi: mandysax.anna2.observable.Observable getRecommendedSong()
studio.mandysa.music.databinding.FragmentSearchBinding: android.widget.LinearLayout getRoot()
studio.mandysa.music.databinding.ActivityMainBinding: studio.mandysa.music.databinding.ActivityMainBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)
studio.mandysa.music.logic.model.ToplistModel: void setDescription(java.lang.String)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
com.yanzhenjie.sofia.StatusView: StatusView(android.content.Context,android.util.AttributeSet)
studio.mandysa.music.databinding.LayoutRecyclerBinding: android.view.View getRoot()
studio.mandysa.music.databinding.LayoutErrorBinding: studio.mandysa.music.databinding.LayoutErrorBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)
androidx.core.view.WindowInsetsCompat$Impl: int hashCode()
androidx.cardview.widget.CardView: void setCardBackgroundColor(int)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
androidx.core.view.ViewCompat$Api26Impl: void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)
studio.mandysa.music.logic.utils.FragmentActivityUtilsKt: kotlin.Lazy inflate(mandysax.fragment.FragmentActivity)
studio.mandysa.music.logic.model.NewSongModel: java.lang.String getTitle()
studio.mandysa.music.databinding.FragmentPlayBinding: FragmentPlayBinding(android.widget.LinearLayout,android.widget.ImageView,android.widget.ImageView,android.widget.TextView,android.widget.ImageView,android.widget.ImageView,android.widget.TextView,android.widget.SeekBar,android.widget.SeekBar)
studio.mandysa.music.ui.search.searchlist.SearchListFragment$nextPage$1: void onFailure(int)
androidx.core.view.ViewCompat$Api28Impl: java.lang.Object requireViewById(android.view.View,int)
studio.mandysa.music.logic.model.NeteaseCloudMusicApi: mandysax.anna2.observable.Observable getToplist()
com.sothree.slidinguppanel.SlidingUpPanelLayout: void setPanelHeight(int)
studio.mandysa.music.databinding.FragmentMeBinding: studio.mandysa.music.databinding.FragmentMeBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)
studio.mandysa.music.databinding.FragmentMeBinding: studio.mandysa.music.databinding.FragmentMeBinding inflate(android.view.LayoutInflater)
com.sothree.slidinguppanel.SlidingUpPanelLayout: SlidingUpPanelLayout(android.content.Context,android.util.AttributeSet)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: PublicSuffixDatabase()
studio.mandysa.music.databinding.FragmentSearchBinding: studio.mandysa.music.databinding.FragmentSearchBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)
studio.mandysa.music.logic.model.PlaylistModel$Playlist: void setId(java.lang.String)
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
studio.mandysa.music.databinding.ItemPlaylistBinding: ItemPlaylistBinding(android.widget.LinearLayout,android.widget.ImageView,android.widget.TextView)
studio.mandysa.music.logic.utils.FragmentBindingDelegate: FragmentBindingDelegate(java.lang.Class)
studio.mandysa.music.databinding.LayoutLoadingBinding: studio.mandysa.music.databinding.LayoutLoadingBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)
studio.mandysa.music.ui.home.HomeFragment$onViewCreated$1$2$1$1$2: void onResponse(java.lang.Object)
mandysax.fragment.FragmentController$STACK: mandysax.fragment.FragmentController$STACK valueOf(java.lang.String)
studio.mandysa.music.logic.utils.EditTextUtilsKt: void showInput(android.widget.EditText)
androidx.core.view.ViewCompat$Api16Impl: void setImportantForAccessibility(android.view.View,int)
studio.mandysa.statelayout.StateLayout: void setErrorLayoutId(int)
androidx.core.view.ViewCompat$Api26Impl: boolean isKeyboardNavigationCluster(android.view.View)
studio.mandysa.music.logic.utils.ViewModelUtilsKt: kotlin.Lazy viewModels(mandysax.fragment.FragmentActivity)
studio.mandysa.music.databinding.ItemMePlaylistBinding: studio.mandysa.music.databinding.ItemMePlaylistBinding inflate(android.view.LayoutInflater)
androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
mandysax.fragmentpage.widget.FragmentPage: java.lang.String getName()
com.sothree.slidinguppanel.SlidingUpPanelLayout: void setDragView(int)
studio.mandysa.music.ui.me.MeFragment$onViewCreated$1$2$1$onResponse$1: void onFailure(int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
studio.mandysa.music.databinding.LayoutErrorBinding: android.widget.LinearLayout getRoot()
com.sothree.slidinguppanel.SlidingUpPanelLayout: android.view.View getSlideableView()
studio.mandysa.music.databinding.ItemPlaylistHeadBinding: studio.mandysa.music.databinding.ItemPlaylistHeadBinding bind(android.view.View)
androidx.recyclerview.widget.RecyclerView$LayoutManager: RecyclerView$LayoutManager()
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()
com.nostra13.universalimageloader.core.assist.QueueProcessingType: com.nostra13.universalimageloader.core.assist.QueueProcessingType valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getStableInsets()
studio.mandysa.music.databinding.FragmentSearchListBinding: studio.mandysa.statelayout.StateLayout getRoot()
androidx.core.view.ViewCompat$Api19Impl: void setAccessibilityLiveRegion(android.view.View,int)
studio.mandysa.bottomnavigationbar.BottomNavigationBar: mandysax.lifecycle.livedata.MutableLiveData getSelectedPosition()
studio.mandysa.music.logic.model.PlaylistInfoModel: PlaylistInfoModel()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)
studio.mandysa.music.databinding.ItemSongBinding: studio.mandysa.music.databinding.ItemSongBinding inflate(android.view.LayoutInflater)
studio.mandysa.music.databinding.ItemPlaylistInfoHeadBinding: android.view.View getRoot()
studio.mandysa.music.databinding.ItemPlaylistBinding: android.view.View getRoot()
studio.mandysa.music.logic.model.SearchMusicModel: java.lang.String getId()
studio.mandysa.music.databinding.LayoutLoadingBinding: studio.mandysa.music.databinding.LayoutLoadingBinding inflate(android.view.LayoutInflater)
androidx.core.view.ViewCompat$Api21Impl: void stopNestedScroll(android.view.View)
studio.mandysa.music.logic.model.PlaylistInfoModel: void setName(java.lang.String)
androidx.core.view.ViewCompat$Api19Impl: boolean isLaidOut(android.view.View)
androidx.core.view.ViewCompat$Api17Impl: void setLayerPaint(android.view.View,android.graphics.Paint)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)
studio.mandysa.music.logic.model.NeteaseCloudMusicApi: mandysax.anna2.observable.Observable getLyric(java.lang.String)
androidx.cardview.widget.CardView: android.content.res.ColorStateList getCardBackgroundColor()
studio.mandysa.music.logic.model.SearchMusicModel: java.lang.String getCoverUrl()
androidx.core.view.ViewCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
studio.mandysa.music.ui.search.SearchFragment$onViewCreated$3$1$1$1: void onResponse(java.lang.Object)
androidx.cardview.widget.CardView: boolean getUseCompatPadding()
androidx.core.view.WindowInsetsCompat$Impl20: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
mandysax.media.model.DefaultMusic: void setUrl(java.lang.String)
studio.mandysa.music.databinding.ItemToplistBinding: android.widget.LinearLayout getRoot()
com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme: com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme valueOf(java.lang.String)
studio.mandysa.music.databinding.ItemPlaylistHeadBinding: ItemPlaylistHeadBinding(android.widget.LinearLayout,androidx.recyclerview.widget.RecyclerView)
studio.mandysa.music.databinding.FragmentPlaylistBinding: studio.mandysa.music.databinding.FragmentPlaylistBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)
studio.mandysa.music.logic.utils.TextViewUtilsKt: void markByColor(android.widget.TextView,java.lang.String)
studio.mandysa.music.logic.utils.ObservableUtilsKt$set$1: void observer(mandysax.lifecycle.Lifecycle$Event)
studio.mandysa.music.databinding.ItemMyPlaylistBinding: studio.mandysa.music.databinding.ItemMyPlaylistBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)
androidx.cardview.widget.CardView: void setCardBackgroundColor(android.content.res.ColorStateList)
okhttp3.TlsVersion: okhttp3.TlsVersion valueOf(java.lang.String)
studio.mandysa.music.logic.model.PlaylistInfoHeadModel: java.lang.String getDescription()
studio.mandysa.music.databinding.ItemPlaylistInfoHeadBinding: android.widget.LinearLayout getRoot()
androidx.core.view.ViewCompat$Api28Impl: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
studio.mandysa.music.ui.search.SearchFragment$onViewCreated$3$1$1$1: void onResponse(java.util.List)
studio.mandysa.music.logic.model.SearchMusicModel: java.lang.String toString()
studio.mandysa.music.logic.model.PlaylistInfoModel: java.util.List getSongList()
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
studio.mandysa.music.databinding.FragmentStartBinding: studio.mandysa.music.databinding.FragmentStartBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)
androidx.core.view.ViewCompat$Api19Impl: void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
mandysax.media.model.DefaultMusic: mandysax.media.model.DefaultMusic setId(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
studio.mandysa.music.logic.model.SingerModel: SingerModel()
com.nostra13.universalimageloader.core.assist.FailReason$FailType: com.nostra13.universalimageloader.core.assist.FailReason$FailType[] values()
studio.mandysa.music.databinding.FragmentControllerBinding: studio.mandysa.music.databinding.FragmentControllerBinding bind(android.view.View)
mandysax.media.model.DefaultMusic: java.lang.String getTitle()
mandysax.fragmentpage.widget.FragmentPage: void setPosition(int)
com.sothree.slidinguppanel.SlidingUpPanelLayout: void setTouchEnabled(boolean)
androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
okhttp3.Protocol: okhttp3.Protocol valueOf(java.lang.String)
androidx.cardview.widget.CardView: void setMinimumWidth(int)
studio.mandysa.music.ui.all.playlist.PlaylistViewModel$nextPage$1$onChanged$1$1: void onResponse(java.util.List)
studio.mandysa.music.logic.utils.EditTextUtilsKt: android.view.inputmethod.InputMethodManager imm(android.widget.EditText)
com.yanzhenjie.sofia.HostLayout: com.yanzhenjie.sofia.NavigationView getMNavigationView()
studio.mandysa.music.databinding.LayoutErrorBinding: android.view.View getRoot()
studio.mandysa.statelayout.StateLayout: void setEmptyLayoutId(int)
androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
androidx.core.view.ViewCompat$Api26Impl: void setKeyboardNavigationCluster(android.view.View,boolean)
com.sothree.slidinguppanel.SlidingUpPanelLayout: void setFadeOnClickListener(android.view.View$OnClickListener)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30()
studio.mandysa.music.ui.all.playlist.PlaylistViewModel$initData$1: PlaylistViewModel$initData$1(studio.mandysa.music.ui.all.playlist.PlaylistViewModel)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
studio.mandysa.music.databinding.ItemUserBinding: ItemUserBinding(androidx.cardview.widget.CardView,android.widget.ImageView,android.widget.TextView)
androidx.core.view.ViewCompat$Api16Impl: void setBackground(android.view.View,android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.sothree.slidinguppanel.SlidingUpPanelLayout: int getPanelHeight()
mandysax.media.model.DefaultMusic: java.lang.String getId()
studio.mandysa.music.logic.model.PlaylistModel$Playlist: void setName(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30)
com.nostra13.universalimageloader.core.assist.LoadedFrom: com.nostra13.universalimageloader.core.assist.LoadedFrom[] values()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)
studio.mandysa.music.logic.utils.ObservableUtilsKt$set$1: ObservableUtilsKt$set$1(mandysax.anna2.observable.Observable,mandysax.lifecycle.Lifecycle)
studio.mandysa.music.logic.utils.FragmentBindingDelegate: void getValue$lambda-0(studio.mandysa.music.logic.utils.FragmentBindingDelegate,mandysax.lifecycle.Lifecycle$Event)
com.sothree.slidinguppanel.SlidingUpPanelLayout: void setGravity(int)
studio.mandysa.statelayout.StateLayout: void setRetryId(int)
studio.mandysa.music.databinding.FragmentSearchListBinding: studio.mandysa.music.databinding.FragmentSearchListBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)
androidx.recyclerview.widget.RecyclerView: java.lang.CharSequence getAccessibilityClassName()
androidx.cardview.widget.CardView: int getContentPaddingLeft()
androidx.cardview.widget.CardView: void setRadius(float)
com.yanzhenjie.sofia.NavigationView: NavigationView(android.content.Context,android.util.AttributeSet)
studio.mandysa.music.ui.me.MeFragment$onViewCreated$1$2$1$onResponse$1: void onResponse(java.lang.Object)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
com.yanzhenjie.sofia.NavigationView: int getDefaultBarSize()
studio.mandysa.music.databinding.ItemToplistBinding: studio.mandysa.music.databinding.ItemToplistBinding bind(android.view.View)
okhttp3.Protocol: okhttp3.Protocol[] values()
androidx.core.view.WindowInsetsCompat$Impl20: void setOverriddenInsets(androidx.core.graphics.Insets[])
studio.mandysa.music.logic.model.SearchMusicModel: SearchMusicModel()
studio.mandysa.music.ui.all.playlist.PlaylistViewModel$nextPage$1$onChanged$1$1: PlaylistViewModel$nextPage$1$onChanged$1$1(studio.mandysa.music.ui.all.playlist.PlaylistViewModel,studio.mandysa.music.ui.all.playlist.PlaylistViewModel$nextPage$1)
androidx.cardview.widget.CardView: float getMaxCardElevation()
studio.mandysa.music.logic.network.ServiceCreator: java.lang.Object create(java.lang.Class)
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)
androidx.core.view.ViewCompat$Api16Impl: int getImportantForAccessibility(android.view.View)
studio.mandysa.music.databinding.FragmentHomeBinding: studio.mandysa.statelayout.StateLayout getRoot()
studio.mandysa.music.databinding.FragmentSearchListBinding: FragmentSearchListBinding(studio.mandysa.statelayout.StateLayout,androidx.recyclerview.widget.RecyclerView,studio.mandysa.statelayout.StateLayout)
studio.mandysa.music.databinding.LayoutEmptyBinding: studio.mandysa.music.databinding.LayoutEmptyBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)
studio.mandysa.music.databinding.FragmentHomeBinding: FragmentHomeBinding(studio.mandysa.statelayout.StateLayout,androidx.recyclerview.widget.RecyclerView,studio.mandysa.statelayout.StateLayout)
studio.mandysa.music.logic.network.Url: Url()
studio.mandysa.music.databinding.FragmentControllerBinding: android.view.View getRoot()
studio.mandysa.music.databinding.LayoutEmptyBinding: studio.mandysa.music.databinding.LayoutEmptyBinding bind(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl: void copyRootViewBounds(android.view.View)
studio.mandysa.music.logic.model.ToplistModel: java.lang.String getUpdateFrequency()
studio.mandysa.music.databinding.ItemMyPlaylistBinding: studio.mandysa.music.databinding.ItemMyPlaylistBinding bind(android.view.View)
studio.mandysa.music.ui.search.searchlist.SearchListFragment: SearchListFragment()
androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
studio.mandysa.music.logic.model.MusicModel: java.lang.String getCoverUrl()
androidx.core.view.ViewCompat$Api26Impl: boolean hasExplicitFocusable(android.view.View)
mandysax.fragmentpage.widget.FragmentPage: void setAdapter(mandysax.fragmentpage.widget.FragmentPage$Adapter)
androidx.core.view.WindowInsetsCompat$Impl: void setRootViewData(androidx.core.graphics.Insets)
studio.mandysa.music.logic.utils.FragmentActivityUtilsKt$inflate$1: androidx.viewbinding.ViewBinding invoke()
androidx.core.view.ViewCompat$Api21Impl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
studio.mandysa.music.logic.model.MusicModel: java.lang.String getUrl()
studio.mandysa.music.logic.utils.FragmentActivityViewModelDelegate: void getValue$lambda-0(studio.mandysa.music.logic.utils.FragmentActivityViewModelDelegate,mandysax.lifecycle.Lifecycle$Event)
studio.mandysa.music.databinding.LayoutEmptyBinding: android.view.View getRoot()
mandysax.fragment.FragmentView: java.lang.Object getTag()
studio.mandysa.music.databinding.FragmentStartBinding: studio.mandysa.music.databinding.FragmentStartBinding bind(android.view.View)
studio.mandysa.music.logic.model.LyricModel: LyricModel()
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimation(android.view.View,java.lang.Runnable)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl(androidx.core.view.WindowInsetsCompat)
studio.mandysa.music.ui.all.playlist.PlaylistViewModel$initData$1: void onResponse(studio.mandysa.music.logic.model.PlaylistInfoModel)
studio.mandysa.music.databinding.ItemPlaylistHeadBinding: studio.mandysa.music.databinding.ItemPlaylistHeadBinding inflate(android.view.LayoutInflater)
androidx.core.view.ViewCompat$Api29Impl: android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View)
studio.mandysa.music.logic.model.NewSongModel: java.util.List getArtist()
studio.mandysa.music.databinding.ItemUserBinding: studio.mandysa.music.databinding.ItemUserBinding inflate(android.view.LayoutInflater)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()
studio.mandysa.music.ui.search.searchlist.SearchListFragment$nextPage$1: void onResponse(java.util.List)
kotlin.jvm.internal.Lambda: java.lang.String toString()
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
studio.mandysa.music.service.MediaPlayService: MediaPlayService()
studio.mandysa.music.logic.model.NewSongModel: java.lang.String getId()
androidx.core.view.ViewCompat$Api16Impl: int getMinimumWidth(android.view.View)
androidx.core.view.ViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
com.sothree.slidinguppanel.SlidingUpPanelLayout: com.sothree.slidinguppanel.PanelState getPanelState()
mandysax.media.model.DefaultMusic: void setTitle(java.lang.String)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
studio.mandysa.music.logic.utils.ViewModelUtilsKt$viewModels$1: mandysax.lifecycle.ViewModel invoke()
studio.mandysa.music.ui.search.SearchFragment$onViewCreated$3$1$1$1: SearchFragment$onViewCreated$3$1$1$1(studio.mandysa.music.ui.search.SearchFragment,studio.mandysa.statelayout.StateLayout)
mandysax.media.model.DefaultMusic: void addArtist(mandysax.media.model.ArtistModel)
androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
studio.mandysa.music.databinding.FragmentControllerBinding: studio.mandysa.music.databinding.FragmentControllerBinding inflate(android.view.LayoutInflater)
androidx.core.view.ViewCompat$Api21Impl: boolean isImportantForAccessibility(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl: boolean isConsumed()
studio.mandysa.music.databinding.ItemUserBinding: studio.mandysa.music.databinding.ItemUserBinding bind(android.view.View)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] values()
studio.mandysa.music.ui.home.HomeFragment$onViewCreated$1$2$1$1$1: void onResponse(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: void setStableInsets(androidx.core.graphics.Insets)
studio.mandysa.music.ui.search.searchlist.SearchListFragment$nextPage$1$onResponse$1: SearchListFragment$nextPage$1$onResponse$1(studio.mandysa.music.ui.search.searchlist.SearchListFragment)
androidx.core.view.WindowInsetsCompat$Impl20: void copyRootViewBounds(android.view.View)
studio.mandysa.music.logic.utils.FragmentActivityUtilsKt$inflate$1: FragmentActivityUtilsKt$inflate$1(mandysax.fragment.FragmentActivity)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
androidx.core.view.WindowInsetsCompat$Impl: void setOverriddenInsets(androidx.core.graphics.Insets[])
studio.mandysa.music.databinding.ActivityMainBinding: studio.mandysa.music.databinding.ActivityMainBinding inflate(android.view.LayoutInflater)
studio.mandysa.music.logic.model.PlaylistModel: PlaylistModel()
androidx.core.view.ViewCompat$Api17Impl: int getLabelFor(android.view.View)
com.sothree.slidinguppanel.SlidingUpPanelLayout: void setCoveredFadeColor(int)
studio.mandysa.music.ui.event.UserViewModel$login$1: void onResponse(studio.mandysa.music.logic.model.LoginModel)
androidx.cardview.widget.CardView: void setMinimumHeight(int)
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
studio.mandysa.music.logic.model.PlaylistModel$Playlist: PlaylistModel$Playlist()
androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
androidx.core.view.ViewCompat$Api16Impl: void setHasTransientState(android.view.View,boolean)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
androidx.core.view.ViewCompat$Api28Impl: boolean isScreenReaderFocusable(android.view.View)
studio.mandysa.music.logic.model.PlaylistInfoHeadModel: PlaylistInfoHeadModel(java.lang.String,java.lang.String,java.lang.String)
androidx.cardview.widget.CardView: void setUseCompatPadding(boolean)
studio.mandysa.music.logic.model.SearchMusicModel: java.util.List getArtist()
studio.mandysa.music.logic.model.UserPlaylistModel$UserPlaylist: UserPlaylistModel$UserPlaylist()
studio.mandysa.music.ui.home.HomeFragment$onViewCreated$1$2$1$1$2: HomeFragment$onViewCreated$1$2$1$1$2(studio.mandysa.music.databinding.FragmentHomeBinding,studio.mandysa.music.ui.home.HomeFragment)
com.nostra13.universalimageloader.core.assist.ViewScaleType: com.nostra13.universalimageloader.core.assist.ViewScaleType[] values()
studio.mandysa.music.logic.model.NeteaseCloudMusicApi: mandysax.anna2.observable.Observable searchSinger(java.lang.String,int,int)
androidx.core.view.ViewCompat$Api17Impl: int generateViewId()
mandysax.fragment.FragmentController$STACK: mandysax.fragment.FragmentController$STACK[] values()
studio.mandysa.music.logic.model.NewSongModel: java.lang.String getCoverUrl()
studio.mandysa.music.databinding.LayoutEmptyBinding: studio.mandysa.music.databinding.LayoutEmptyBinding inflate(android.view.LayoutInflater)
studio.mandysa.music.databinding.FragmentHomeBinding: android.view.View getRoot()
studio.mandysa.music.logic.utils.FragmentActivityViewModelDelegate: FragmentActivityViewModelDelegate(java.lang.Class)
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
com.sothree.slidinguppanel.SlidingUpPanelLayout: void setParallaxOffset(int)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float getDistance(android.widget.EdgeEffect)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()
studio.mandysa.music.databinding.ItemPlaylistBinding: android.widget.LinearLayout getRoot()
studio.mandysa.music.logic.model.PlaylistInfoModel$SongList: java.lang.String toString()
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int)
androidx.core.view.ViewCompat$Api28Impl: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
studio.mandysa.music.logic.model.ToplistModel: java.lang.String getCoverImgUrl()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
com.sothree.slidinguppanel.SlidingUpPanelLayout: void setPanelState(com.sothree.slidinguppanel.PanelState)
studio.mandysa.music.logic.utils.FragmentActivityViewModelDelegate: java.lang.Object getValue(java.lang.Object,kotlin.reflect.KProperty)
androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()
studio.mandysa.music.databinding.ItemMePlaylistBinding: ItemMePlaylistBinding(android.widget.LinearLayout,androidx.recyclerview.widget.RecyclerView)
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
studio.mandysa.bottomnavigationbar.BottomNavigationBar: void setSelectedPosition(int)
studio.mandysa.statelayout.StateLayout: void setLoadingLayoutId(int)
studio.mandysa.music.ui.home.HomeFragment$onViewCreated$1$2$1$1$2: void onResponse(java.util.List)
studio.mandysa.music.logic.network.ServiceCreator: <clinit>()
studio.mandysa.music.logic.utils.ViewModelUtilsKt$viewModels$1: java.lang.Object invoke()
androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()
com.sothree.slidinguppanel.SlidingUpPanelLayout: int getMinFlingVelocity()
studio.mandysa.music.ui.me.MeFragment$onViewCreated$1$2$1: void onResponse(java.lang.Object)
androidx.core.view.ViewCompat$Api21Impl: void setTransitionName(android.view.View,java.lang.String)
studio.mandysa.music.ui.me.MeFragment$onViewCreated$1$2$1$onResponse$1: MeFragment$onViewCreated$1$2$1$onResponse$1(studio.mandysa.music.databinding.FragmentMeBinding)
studio.mandysa.music.logic.model.PlaylistModel$Playlist: java.lang.String getName()
com.sothree.slidinguppanel.SlidingUpPanelLayout: void setMaxSlideOffset(float)
studio.mandysa.music.ui.all.playlist.PlaylistViewModel$nextPage$1$onChanged$1$1: void onResponse(java.lang.Object)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemGestureInsets(androidx.core.graphics.Insets)
androidx.recyclerview.widget.RecyclerView: int getScrollState()
studio.mandysa.music.databinding.ItemPlaylistBinding: studio.mandysa.music.databinding.ItemPlaylistBinding bind(android.view.View)
androidx.core.widget.NestedScrollView: int getScrollRange()
mandysax.fragmentpage.widget.FragmentPage: int getPosition()
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl()
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
studio.mandysa.music.logic.utils.ViewModelUtilsKt$viewModels$1: ViewModelUtilsKt$viewModels$1(mandysax.fragment.FragmentActivity)
androidx.core.view.ViewCompat$Api26Impl: void setAutofillHints(android.view.View,java.lang.String[])
studio.mandysa.music.databinding.LayoutErrorBinding: studio.mandysa.music.databinding.LayoutErrorBinding bind(android.view.View)
studio.mandysa.music.databinding.ItemPlaylistBinding: studio.mandysa.music.databinding.ItemPlaylistBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)
androidx.core.view.ViewCompat$Api17Impl: android.view.Display getDisplay(android.view.View)
studio.mandysa.music.databinding.ActivityMainBinding: ActivityMainBinding(android.widget.FrameLayout,android.widget.FrameLayout,studio.mandysa.bottomnavigationbar.BottomNavigationBar,mandysax.fragmentpage.widget.FragmentPage,com.sothree.slidinguppanel.SlidingUpPanelLayout)
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
mandysax.fragmentpage.widget.FragmentPage: FragmentPage(android.content.Context,android.util.AttributeSet)
com.sothree.slidinguppanel.SlidingUpPanelLayout: void setScrollableView(android.view.View)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
studio.mandysa.music.databinding.ItemMePlaylistBinding: studio.mandysa.music.databinding.ItemMePlaylistBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)
mandysax.fragmentpage.widget.FragmentPage: mandysax.fragment.Fragment getFragment()
androidx.core.view.ViewCompat$Api26Impl: android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)
studio.mandysa.statelayout.StateLayout: StateLayout(android.content.Context,android.util.AttributeSet)
studio.mandysa.music.databinding.ItemUserBinding: studio.mandysa.music.databinding.ItemUserBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)
studio.mandysa.music.logic.model.ToplistModel: java.lang.String getDescription()
studio.mandysa.music.databinding.FragmentSearchListBinding: studio.mandysa.music.databinding.FragmentSearchListBinding bind(android.view.View)
studio.mandysa.music.databinding.ItemSongBinding: android.view.View getRoot()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
com.nostra13.universalimageloader.core.assist.ImageScaleType: com.nostra13.universalimageloader.core.assist.ImageScaleType valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api17Impl: int getPaddingEnd(android.view.View)
studio.mandysa.music.logic.utils.FragmentActivityUtilsKt$inflate$1: java.lang.Object invoke()
studio.mandysa.music.logic.model.PlaylistModel: java.util.List getPlaylist()
androidx.core.view.ViewCompat$Api21Impl: void setNestedScrollingEnabled(android.view.View,boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setStableInsets(androidx.core.graphics.Insets)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()
studio.mandysa.music.ui.search.searchlist.SearchListFragment$nextPage$1: SearchListFragment$nextPage$1(studio.mandysa.music.ui.search.searchlist.SearchListFragment)
studio.mandysa.music.logic.model.PlaylistInfoModel: java.lang.String getName()
studio.mandysa.music.ui.search.searchlist.SearchListFragment$nextPage$1$onResponse$1: void onFailure(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()
studio.mandysa.music.databinding.FragmentMeBinding: studio.mandysa.statelayout.StateLayout getRoot()
androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()
studio.mandysa.statelayout.StateLayout: void setLoading(kotlin.jvm.functions.Function1)
androidx.core.view.ViewCompat$Api28Impl: boolean isAccessibilityHeading(android.view.View)
studio.mandysa.music.databinding.ItemMyPlaylistBinding: android.view.View getRoot()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()
mandysax.fragment.FragmentView: mandysax.fragment.FragmentActivity getActivity()
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
studio.mandysa.music.logic.model.NewSongModel: NewSongModel()
studio.mandysa.music.logic.model.NeteaseCloudMusicApi: mandysax.anna2.observable.Observable login(java.lang.String,java.lang.String)
studio.mandysa.music.ui.me.MeFragment$onViewCreated$1$2$1: void onFailure(int)
studio.mandysa.music.ui.play.PlayFragment: PlayFragment()
studio.mandysa.statelayout.StateLayout: void setErrorLayout(int)
androidx.core.view.ViewCompat$Api26Impl: void setFocusedByDefault(android.view.View,boolean)
studio.mandysa.music.databinding.FragmentSearchBinding: studio.mandysa.music.databinding.FragmentSearchBinding inflate(android.view.LayoutInflater)
androidx.cardview.widget.CardView: CardView(android.content.Context,android.util.AttributeSet)
studio.mandysa.statelayout.StateLayout: void setRetryEvent(android.view.View)
studio.mandysa.music.databinding.ItemPlaylistBinding: studio.mandysa.music.databinding.ItemPlaylistBinding inflate(android.view.LayoutInflater)
studio.mandysa.music.ui.controller.ControllerFragment: ControllerFragment()
mandysax.fragment.FragmentLifecycle: FragmentLifecycle()
kotlin.jvm.internal.Lambda: Lambda(int)
androidx.core.view.ViewCompat$Api17Impl: void setLayoutDirection(android.view.View,int)
androidx.cardview.widget.CardView: boolean getPreventCornerOverlap()
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
studio.mandysa.music.databinding.FragmentStartBinding: android.widget.LinearLayout getRoot()
studio.mandysa.music.logic.utils.FragmentActivityViewModelDelegate: void getValue$lambda-1(studio.mandysa.music.logic.utils.FragmentActivityViewModelDelegate,mandysax.lifecycle.Lifecycle$Event)
androidx.core.view.ViewCompat$Api17Impl: void setPaddingRelative(android.view.View,int,int,int,int)
studio.mandysa.music.logic.utils.FragmentBindingDelegate: java.lang.Object getValue(java.lang.Object,kotlin.reflect.KProperty)
androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)
studio.mandysa.music.databinding.ItemPlaylistInfoHeadBinding: studio.mandysa.music.databinding.ItemPlaylistInfoHeadBinding inflate(android.view.LayoutInflater)
androidx.cardview.widget.CardView: void setMaxCardElevation(float)
studio.mandysa.music.logic.model.PlaylistInfoModel$SongList: void setId(java.lang.String)
studio.mandysa.music.logic.utils.FragmentUtilsKt: studio.mandysa.music.logic.utils.FragmentBindingDelegate bindView()
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreFling(android.view.View,float,float)
mandysax.anna2.TYPE: mandysax.anna2.TYPE valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api16Impl: boolean hasOverlappingRendering(android.view.View)
studio.mandysa.music.logic.model.ToplistModel: java.lang.String getId()
studio.mandysa.music.databinding.ItemUserBinding: android.view.View getRoot()
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setStableInsets(androidx.core.graphics.Insets)
com.nostra13.universalimageloader.core.assist.FailReason$FailType: com.nostra13.universalimageloader.core.assist.FailReason$FailType valueOf(java.lang.String)
androidx.core.widget.EdgeEffectCompat$Api31Impl: android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet)
androidx.cardview.widget.CardView: float getRadius()
mandysax.media.model.DefaultMusic: void setCoverUrl(java.lang.String)
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.nostra13.universalimageloader.core.assist.ImageScaleType: com.nostra13.universalimageloader.core.assist.ImageScaleType[] values()
studio.mandysa.music.databinding.FragmentSearchListBinding: android.view.View getRoot()
androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityHeading(android.view.View,boolean)
androidx.core.view.ViewCompat$Api19Impl: boolean isAttachedToWindow(android.view.View)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedFling(android.view.View,float,float,boolean)
mandysax.media.model.DefaultMusic: java.lang.String getCoverUrl()
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
studio.mandysa.music.databinding.FragmentPlaylistBinding: android.view.View getRoot()
androidx.core.view.ViewCompat$Api21Impl: boolean hasNestedScrollingParent(android.view.View)
androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)
studio.mandysa.statelayout.StateLayout: int getLoadingLayout()
com.sothree.slidinguppanel.PanelState: com.sothree.slidinguppanel.PanelState[] values()
studio.mandysa.music.ui.event.UserViewModel$login$1: void onResponse(java.lang.Object)
studio.mandysa.music.logic.model.MusicModel: java.lang.String getTitle()
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
androidx.core.view.ViewCompat$Api29Impl: void setSystemGestureExclusionRects(android.view.View,java.util.List)
com.sothree.slidinguppanel.SlidingUpPanelLayout: void setPanelStateInternal(com.sothree.slidinguppanel.PanelState)
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
mandysax.fragment.FragmentView: mandysax.fragment.Fragment getFragment()
studio.mandysa.statelayout.StateLayout: int getEmptyLayout()
studio.mandysa.music.ui.me.MeFragment$onViewCreated$1$2$1: MeFragment$onViewCreated$1$2$1(studio.mandysa.music.databinding.FragmentMeBinding,studio.mandysa.music.ui.me.MeFragment)
studio.mandysa.music.databinding.LayoutRecyclerBinding: studio.mandysa.music.databinding.LayoutRecyclerBinding inflate(android.view.LayoutInflater)
androidx.core.view.WindowInsetsCompat$Impl20: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme: com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme[] values()
androidx.core.view.ViewCompat$Api21Impl: boolean isNestedScrollingEnabled(android.view.View)
studio.mandysa.statelayout.StateLayout: kotlin.jvm.functions.Function1 getError()
studio.mandysa.music.ui.all.playlist.PlaylistViewModel$initData$1: void onFailure(int)
androidx.cardview.widget.CardView: int getContentPaddingRight()
studio.mandysa.music.logic.model.PlaylistInfoHeadModel: java.lang.String getTitle()
studio.mandysa.music.ui.home.HomeFragment$onViewCreated$1$2$1$1$2: void onFailure(int)
com.nostra13.universalimageloader.core.assist.LoadedFrom: com.nostra13.universalimageloader.core.assist.LoadedFrom valueOf(java.lang.String)
studio.mandysa.music.logic.model.NeteaseCloudMusicApi: mandysax.anna2.observable.Observable getUserInfo(java.lang.String,long)
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View,int,int,int,int)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootViewData(androidx.core.graphics.Insets)
studio.mandysa.music.databinding.ItemUserBinding: androidx.cardview.widget.CardView getRoot()
androidx.core.view.ViewCompat$Api23Impl: int getScrollIndicators(android.view.View)
studio.mandysa.music.databinding.FragmentMeBinding: studio.mandysa.music.databinding.FragmentMeBinding bind(android.view.View)
androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
androidx.core.view.ViewCompat$Api16Impl: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener)
studio.mandysa.music.logic.utils.ViewModelUtilsKt$viewModels$2: ViewModelUtilsKt$viewModels$2(mandysax.fragment.Fragment)
studio.mandysa.music.logic.model.LoginModel: LoginModel()
androidx.cardview.widget.CardView: void setCardElevation(float)
androidx.core.view.ViewCompat$Api21Impl: boolean startNestedScroll(android.view.View,int)
androidx.core.view.ViewCompat$Api16Impl: android.view.ViewParent getParentForAccessibility(android.view.View)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getSystemGestureInsets()
androidx.core.view.WindowInsetsCompat$Impl29: void setStableInsets(androidx.core.graphics.Insets)
studio.mandysa.music.logic.model.ToplistModel: void setUpdateFrequency(java.lang.String)
mandysax.fragment.FragmentActivity: FragmentActivity()
studio.mandysa.music.databinding.LayoutRecyclerBinding: LayoutRecyclerBinding(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getTappableElementInsets()
androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
studio.mandysa.music.databinding.FragmentHomeBinding: studio.mandysa.music.databinding.FragmentHomeBinding bind(android.view.View)
androidx.cardview.widget.CardView: float getCardElevation()
androidx.cardview.widget.CardView: int getContentPaddingTop()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getVisibleInsets(android.view.View)
mandysax.lifecycle.Lifecycle$Event: mandysax.lifecycle.Lifecycle$Event[] values()
studio.mandysa.bottomnavigationbar.BottomNavigationBar: BottomNavigationBar(android.content.Context,android.util.AttributeSet)
com.sothree.slidinguppanel.SlidingUpPanelLayout: void setOverlayed(boolean)
com.sothree.slidinguppanel.SlidingUpPanelLayout: void setShadowHeight(int)
androidx.core.view.ViewCompat$Api21Impl: float getElevation(android.view.View)
studio.mandysa.music.ui.me.MeFragment$onViewCreated$1$2$1: void onResponse(studio.mandysa.music.logic.model.UserModel)
studio.mandysa.music.databinding.FragmentPlaylistBinding: studio.mandysa.music.databinding.FragmentPlaylistBinding inflate(android.view.LayoutInflater)
studio.mandysa.music.databinding.FragmentHomeBinding: studio.mandysa.music.databinding.FragmentHomeBinding inflate(android.view.LayoutInflater)
mandysax.lifecycle.Lifecycle$Event: mandysax.lifecycle.Lifecycle$Event valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api19Impl: boolean isLayoutDirectionResolved(android.view.View)
mandysax.fragment.FragmentView: java.lang.String getTag()
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.sothree.slidinguppanel.SlidingUpPanelLayout: int getShadowHeight()
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
mandysax.media.model.DefaultMusic: DefaultMusic()
mandysax.media.model.DefaultMusic: java.util.List getArtist()
androidx.core.view.ViewCompat$Api17Impl: void setLabelFor(android.view.View,int)
studio.mandysa.music.databinding.FragmentPlayBinding: studio.mandysa.music.databinding.FragmentPlayBinding inflate(android.view.LayoutInflater)
studio.mandysa.music.logic.model.NeteaseCloudMusicApi: mandysax.anna2.observable.Observable getMusicInfo(java.util.List)
androidx.recyclerview.widget.RecyclerView: void setScrollState(int)
androidx.core.view.ViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
studio.mandysa.music.databinding.FragmentControllerBinding: FragmentControllerBinding(android.widget.LinearLayout,android.widget.ImageView,android.widget.ImageView,android.widget.ImageView,android.widget.TextView)
studio.mandysa.music.logic.utils.ArrayListUtilsKt: mandysax.media.model.DefaultAlbum createAlbum(java.util.List)
studio.mandysa.music.logic.utils.ObservableUtilsKt: void set(mandysax.anna2.observable.Observable,mandysax.lifecycle.Lifecycle,mandysax.anna2.callback.Callback)
androidx.core.view.ViewCompat$Api26Impl: void setImportantForAutofill(android.view.View,int)
studio.mandysa.music.databinding.ActivityMainBinding: android.widget.FrameLayout getRoot()
androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)
androidx.core.view.WindowInsetsCompat$Impl30: void copyRootViewBounds(android.view.View)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
studio.mandysa.music.databinding.LayoutLoadingBinding: studio.mandysa.music.databinding.LayoutLoadingBinding bind(android.view.View)
studio.mandysa.music.logic.model.PlaylistInfoModel: java.lang.String getCoverImgUrl()
studio.mandysa.music.ui.home.HomeFragment$onViewCreated$1$2$1$1$1: void onFailure(int)
studio.mandysa.music.logic.utils.FragmentActivityViewModelDelegate: mandysax.lifecycle.ViewModel getValue(mandysax.fragment.Fragment,kotlin.reflect.KProperty)
com.sothree.slidinguppanel.SlidingUpPanelLayout: int getCoveredFadeColor()
mandysax.fragmentpage.widget.FragmentPage: mandysax.fragmentpage.widget.StateViewModel getFragment()
androidx.recyclerview.widget.RecyclerView: boolean isLayoutSuppressed()
studio.mandysa.music.databinding.ItemSongBinding: androidx.cardview.widget.CardView getRoot()
studio.mandysa.music.databinding.ItemPlaylistHeadBinding: android.widget.LinearLayout getRoot()
com.nostra13.universalimageloader.core.assist.ViewScaleType: com.nostra13.universalimageloader.core.assist.ViewScaleType valueOf(java.lang.String)
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
studio.mandysa.music.ui.me.MeFragment$onViewCreated$1$2$1$onResponse$1: void onResponse(studio.mandysa.music.logic.model.UserPlaylistModel)
com.sothree.slidinguppanel.SlidingUpPanelLayout: android.view.View getScrollableView()
studio.mandysa.music.databinding.FragmentSearchBinding: FragmentSearchBinding(android.widget.LinearLayout,androidx.recyclerview.widget.RecyclerView,android.widget.EditText,com.sothree.slidinguppanel.SlidingUpPanelLayout,studio.mandysa.statelayout.StateLayout)
mandysax.media.model.DefaultMusic: java.lang.String getUrl()
studio.mandysa.music.ui.search.searchlist.SearchListFragment$nextPage$1$onResponse$1: void onResponse(java.util.List)
mandysax.fragment.Fragment: Fragment()
studio.mandysa.music.logic.model.NeteaseCloudMusicApi: mandysax.anna2.observable.Observable getUserPlaylist(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: float getZ(android.view.View)
studio.mandysa.music.databinding.FragmentPlayBinding: android.view.View getRoot()
studio.mandysa.music.databinding.FragmentPlaylistBinding: studio.mandysa.statelayout.StateLayout getRoot()
androidx.core.view.ViewCompat$Api16Impl: void requestFitSystemWindows(android.view.View)
mandysax.navigation.NavHostFragmentView: mandysax.navigation.fragment.NavHostFragment getNavHostFragment()
androidx.core.graphics.drawable.IconCompat: IconCompat()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int,boolean)
studio.mandysa.music.databinding.ItemToplistBinding: android.view.View getRoot()
studio.mandysa.music.logic.utils.DefaultPlayManagerUtilsKt: mandysax.media.DefaultPlayerManager getInstance()
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float onPullDistance(android.widget.EdgeEffect,float,float)
studio.mandysa.music.databinding.ItemToplistBinding: studio.mandysa.music.databinding.ItemToplistBinding inflate(android.view.LayoutInflater)
androidx.core.view.ViewCompat$Api16Impl: int getWindowSystemUiVisibility(android.view.View)
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View)
studio.mandysa.music.databinding.FragmentPlayBinding: studio.mandysa.music.databinding.FragmentPlayBinding bind(android.view.View)
mandysax.fragment.FragmentView: java.lang.String getName()
com.sothree.slidinguppanel.PanelState: com.sothree.slidinguppanel.PanelState valueOf(java.lang.String)
com.yanzhenjie.sofia.HostLayout: android.widget.FrameLayout getMContentLayout()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)
studio.mandysa.music.logic.network.ServiceCreator: ServiceCreator()
studio.mandysa.statelayout.StateLayout: kotlin.jvm.functions.Function1 getEmpty()
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)
com.sothree.slidinguppanel.SlidingUpPanelLayout: void setClipPanel(boolean)
androidx.core.view.WindowInsetsCompat$Impl20: void loadReflectionField()
androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()
studio.mandysa.music.databinding.FragmentMeBinding: android.view.View getRoot()
androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)
studio.mandysa.music.databinding.LayoutRecyclerBinding: studio.mandysa.music.databinding.LayoutRecyclerBinding bind(android.view.View)
androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
studio.mandysa.music.logic.model.SearchMusicModel: java.lang.String getTitle()
studio.mandysa.music.logic.model.NeteaseCloudMusicApi: mandysax.anna2.observable.Observable getRecommendedPlaylist(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int)
studio.mandysa.music.logic.model.PlaylistModel$Playlist: java.lang.String getId()
studio.mandysa.statelayout.StateLayout: void setError(kotlin.jvm.functions.Function1)
studio.mandysa.music.logic.utils.ViewModelUtilsKt$viewModels$2: java.lang.Object invoke()
studio.mandysa.statelayout.StateLayout: void setEmpty(kotlin.jvm.functions.Function1)
studio.mandysa.music.databinding.LayoutEmptyBinding: androidx.core.widget.NestedScrollView getRoot()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)
studio.mandysa.music.databinding.LayoutRecyclerBinding: androidx.recyclerview.widget.RecyclerView getRoot()
androidx.core.view.ViewCompat$Api19Impl: int getAccessibilityLiveRegion(android.view.View)
studio.mandysa.music.databinding.ItemToplistBinding: studio.mandysa.music.databinding.ItemToplistBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)
studio.mandysa.music.ui.search.SearchFragment$onViewCreated$3$1$1$1: void onFailure(int)
androidx.core.view.ViewCompat$Api21Impl: float getTranslationZ(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
studio.mandysa.music.ui.home.HomeFragment$onViewCreated$1$2$1$1$1: void onResponse(studio.mandysa.music.logic.model.PlaylistModel)
studio.mandysa.bottomnavigationbar.BottomNavigationBar: void setModels(java.util.List)
studio.mandysa.music.databinding.LayoutErrorBinding: studio.mandysa.music.databinding.LayoutErrorBinding inflate(android.view.LayoutInflater)
androidx.core.view.ViewCompat$Api26Impl: void setNextClusterForwardId(android.view.View,int)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)
androidx.core.view.ViewCompat$Api21Impl: java.lang.String getTransitionName(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
studio.mandysa.music.databinding.ItemMyPlaylistBinding: studio.mandysa.music.databinding.ItemMyPlaylistBinding inflate(android.view.LayoutInflater)
studio.mandysa.music.databinding.ItemPlaylistHeadBinding: android.view.View getRoot()
androidx.core.view.ViewCompat$Api16Impl: boolean hasTransientState(android.view.View)
com.sothree.slidinguppanel.SlidingUpPanelLayout: void setMinFlingVelocity(int)
studio.mandysa.music.databinding.FragmentStartBinding: android.view.View getRoot()
studio.mandysa.music.logic.model.PlaylistInfoModel: java.lang.String getDescription()
